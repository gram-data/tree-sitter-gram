==================
Text: single character string
==================

({ c : 'a' })

---

(gram
  (pattern
    (pattern_element
      element: (node
        record: (record
          (property
            key: (symbol)
            value: (string_literal
              content: (string_content))))))))

==================
Text: long string
==================

({ s : 'This is a sentence, followed by another sentence. Here is the second sentence.' })

---

(gram
  (pattern
    (pattern_element
      element: (node
        record: (record
          (property
            key: (symbol)
            value: (string_literal
              content: (string_content))))))))

==================
Text: fenced multiline string
==================

({ s : ```
This is a sentence, followed by another sentence on another line. 
Here is the second sentence. But wait... it keeps going
onto a third line. Note that these lines will have a lot of whitespace.
``` })

---

(gram
  (pattern
    (pattern_element
      element: (node
        record: (record
          (property
            key: (symbol)
            value: (string_literal
              content: (string_content))))))))

==================
Text: tagged fence multiline string
==================

({ s : ```md
This is a sentence, followed by another sentence on another line. 
Here is the second sentence. But wait... it keeps going
onto a third line. Note that these lines will have a lot of whitespace.
``` })

---

(gram
  (pattern
    (pattern_element
      element: (node
        record: (record
          (property
            key: (symbol)
            value: (tagged_string
              tag: (symbol)
              content: (string_content))))))))

==================
Text: nested quotes within single-quoted string
==================

({ s : 'I say, "let\'s try it!"' })

---

(gram
  (pattern
    (pattern_element
      element: (node
        record: (record
          (property
            key: (symbol)
            value: (string_literal
              content: (string_content))))))))

==================
Text: nested quotes within double-quoted string
==================

({ s : "I say, \"let's try it!\"" })

---

(gram
  (pattern
    (pattern_element
      element: (node
        record: (record
          (property
            key: (symbol)
            value: (string_literal
              content: (string_content))))))))

==================
Text: single-quoted string property
==================

({ s : 'a' })

---

(gram
  (pattern
    (pattern_element
      element: (node
        record: (record
          (property
            key: (symbol)
            value: (string_literal
              content: (string_content))))))))

==================
Text: backtick-quoted string property
==================

({ s : `a` })

---

(gram
  (pattern
    (pattern_element
      element: (node
        record: (record
          (property
            key: (symbol)
            value: (string_literal
              content: (string_content))))))))

==================
Text: weird characters in string property
==================

({ s : 'ðŸ˜€ Ã¸â„¢Âµ âš›ï¸Žâ™˜' })
---

(gram
  (pattern
    (pattern_element
      element: (node
        record: (record
          (property
            key: (symbol)
            value: (string_literal
              content: (string_content))))))))

==================
Text: tagged string properties
==================

({  t1 : url`http://somewhere.org`,
    t2 : md`# Title\nFirst paragraph about something.`,
    t3 : date`2024-04-05`,
    t4 : week`2024W35`,
    t5 : weekDate`2024W35-5`,
    t6 : time`17:35`,
    t7 : time`17:42:03.149`,
    t8 : duration`PT2H3M42S`,
    t9 : point`30 10`
})

---

(gram
  (pattern
    (pattern_element
      element: (node
        record: (record
          (property
            key: (symbol)
            value: (tagged_string
              tag: (symbol)
              content: (string_content)))
          (property
            key: (symbol)
            value: (tagged_string
              tag: (symbol)
              content: (string_content)))
          (property
            key: (symbol)
            value: (tagged_string
              tag: (symbol)
              content: (string_content)))
          (property
            key: (symbol)
            value: (tagged_string
              tag: (symbol)
              content: (string_content)))
          (property
            key: (symbol)
            value: (tagged_string
              tag: (symbol)
              content: (string_content)))
          (property
            key: (symbol)
            value: (tagged_string
              tag: (symbol)
              content: (string_content)))
          (property
            key: (symbol)
            value: (tagged_string
              tag: (symbol)
              content: (string_content)))
          (property
            key: (symbol)
            value: (tagged_string
              tag: (symbol)
              content: (string_content)))
          (property
            key: (symbol)
            value: (tagged_string
              tag: (symbol)
              content: (string_content))))))))
