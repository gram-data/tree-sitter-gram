==================
Identifier cannot start with '@'
:error
==================

(@neo4j.com)

---



==================
Identifier can '@' after first character
==================

(akollegger@neo4j.com)

---

(gram
  (pattern
    (pattern_element
      element: (node
        identifier: (symbol)))))

==================
Identifier using snakecase '_' and mixed case
==================

(_0n96pdf6E)
(Im0_pWk0g4)

---

(gram
  (pattern
    (pattern_element
      element: (node
        identifier: (symbol))))
  (pattern
    (pattern_element
      element: (node
        identifier: (symbol)))))

==================
Identifier using kebabcase '-' and mixed case
==================

(hello-there)

---

(gram
  (pattern
    (pattern_element
      element: (node
        identifier: (symbol)))))

==================
Identifier using numbers
==================

(42)

---

(gram
  (pattern
    (pattern_element
      element: (node
        identifier: (integer)))))

==================
Identifier using numbers with units
==================

(12px)

---

(gram
  (pattern
    (pattern_element
      element: (node
        identifier: (measurement)))))

==================
Identifier using backticks
==================

(`+1`)

---

(gram
  (pattern
    (pattern_element
      element: (node
        identifier: (string_literal
          content: (string_content))))))

==================
Identifier using backticks with escaped backtick
==================

(`escape \` the backtick`)

---

(gram
  (pattern
    (pattern_element
      element: (node
        identifier: (string_literal
          content: (string_content))))))

==================
Identifier using double-quotes
==================

("Hello World!")

---

(gram
  (pattern
    (pattern_element
      element: (node
        identifier: (string_literal
          content: (string_content))))))

==================
Identifier using double-quotes with escaped double-quote
==================

("escape \" the double-quote")

---

(gram
  (pattern
    (pattern_element
      element: (node
        identifier: (string_literal
          content: (string_content))))))
